/* Base node css */
.draggable-node {
  top: 0;
  left: 0;
  position: absolute;
  transform: translate(0, 0);
  z-index: 10;

  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  box-sizing: border-box;

  padding: var(--node-padding-vertical) var(--node-padding-horizontal);
  border: 1px solid var(--gray-mid);
  box-shadow: -3px 3px 4px rgba(0, 0, 0, 0.25);
  border-radius: 5px;
  background-color: white;
  font-family: 'Inter', sans-serif;
  color: black;
}

.dark-node {
  background-color: var(--gray-dark);
  color: white;
}

.draggable-node span {
  /* font-family: sans-serif; */
  font-size: 12px;
  padding: calc(var(--io-height) - 12px) 0 0 0;
}

.selected::before {
  position: absolute;
  width: calc(100% + 12px);
  height: calc(100% + 12px);
  content: '';
  background-color: transparent;
  border: 3px solid palevioletred;
  border-radius: 10px;
  top: -9px;
  left: -9px;
  z-index: -1;
}

/* Node Output styles */

.node-outputs {
  display: flex;
  height: 100%;
  flex-direction: column;
  justify-content: flex-end;
  font-weight: 600;
  font-size: 12px;
}

.output-point {
  height: var(--io-height);
  z-index: 20;
  text-align: right;
  position: relative;
  cursor: pointer;
  user-select: none;
  font-weight: 600;
}

.output-point:after {
  content: '';
  box-sizing: border-box;
  width: var(--io-point-diameter);
  height: var(--io-point-diameter);
  position: absolute;
  top: calc(var(--io-height) - var(--io-point-diameter) + 1px);
  right: calc(calc(var(--io-point-diameter) * -0.5) + calc(var(--node-padding-horizontal) * -1));
  background-color: white;
  border: 2px solid black;
  border-radius: calc(var(--io-point-diameter) * 0.5);
}

.output-point:hover:after {
  background-color: black;
}


/* Node Input styles */
.node-inputs {
  display: flex;
  height: 100%;
  flex-direction: column;
  justify-content: flex-end;
  font-weight: 600;
  font-size: 12px;
}

.input-point {
  height: var(--io-height);
  z-index: 20;
  text-align: left;
  position: relative;
  cursor: pointer;
  user-select: none;
  font-weight: 600;
}

.input-point:after {
  content: '';
  box-sizing: border-box;
  width: var(--io-point-diameter);
  height: var(--io-point-diameter);
  position: absolute;
  top: calc(var(--io-height) - var(--io-point-diameter) + 1px);
  left: calc(calc(var(--io-point-diameter) * -0.5) + calc(var(--node-padding-horizontal) * -1));
  background-color: white;
  border: 2px solid black;
  border-radius: calc(var(--io-point-diameter) * 0.5);
  transition: all 100ms ease-in-out;
  transition: color, background-color 0ms; /* for fancy connections don't transition */
}

.input-point:hover:after {
  width: calc(var(--io-point-diameter) * 1.3);
  height: calc(var(--io-point-diameter) * 1.3);
  top: calc(var(--io-height) - var(--io-point-diameter) * 1.15 + 1px);
  left: calc(calc(var(--io-point-diameter) * -0.65) + calc(var(--node-padding-horizontal) * -1));
  border: 3px solid black;
  border-radius: calc(var(--io-point-diameter) * 0.65);
  cursor: pointer;
}

/* MarkerNode */
.marker-node {
  width: 280px;
  height: 120px;
}

.marker-node-img {
  height: 100%;
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
  /* margin: 0 20px; */
  vertical-align: bottom;
}

/* Variable nodes */
.number-node {
  width: var(--number-node-w);
  height: var(--number-node-h);
}

.node-number-input {
  text-align: right;
  /* padding-right: 5px; */
  width: 100%;
  height: calc(var(--number-node-h) - 2 * var(--node-padding-vertical));
  font-size: calc((var(--number-node-h) - 2 * var(--node-padding-vertical)) * 0.8);
  font-weight: 600;
  background: none;
  border: none;
  background-color: var(--gray-light);
  border: 1px solid var(--gray-mid);
  border-radius: 3px;
}

/* detection panel */
.detection-panel {
  width: var(--detection-node-w);
  height: var(--detection-node-h);
  display: block;
}

.detection-panel .output-point {
  position: absolute;
  right: var(--node-padding-horizontal);
  bottom: var(--node-padding-vertical);
  font-size: 12px;
  font-weight: 600;
}

.labeled-select {
  margin-top: 220px;
}

span.select-label {
  position: relative;
  float: left;
  width: 60px;
  text-transform: uppercase;
  padding-top: 3px;
}

.detection-parameter {
  position: relative;
  width: 100%;
  float: left;
  clear: both;
  min-height: 30px;
}

.detection-view {
  width: calc(var(--detection-node-w) - 1px);
  background: black;
  position: absolute;
  top: -1px;
  left: -1px;
  height: 15px;
  border-radius: 3px 3px 0 0;
}

.detection-img {
  position: absolute;
  width: calc(var(--detection-node-w) - 1px);
  top: 14px;
  left: -1px;
  user-select: none;
  pointer-events: none;
}

.detection-select {
  background: var(--gray-light);
  margin-top: 2px;
}

.detection-check {
  margin-top: 4px;
}

.draggable-node span.marker-data {
  min-width: 35px;
  text-align: right;
  display: inline-block;
  padding: 0;
}

/* logic nodes */

.logic-node {
  width: var(--logic-node-w);
  height: var(--logic-node-h);
}

span.logic-node-text {
  font-weight: 800;
  text-transform: capitalize;
  font-size: 18px;
  height: 100%;
  padding-top: calc(var(--logic-node-h) * 0.5 - 10px - var(--node-padding-vertical));
}

/* key nodes */

.key-node {
  width: var(--send-node-w);
  height: var(--send-node-h);
}

.node-select-input {
  width: 60px;
  height: calc(var(--send-node-h) - 2 * var(--node-padding-vertical));
  text-align: left;
  margin-left: 15px;
  font-size: 20px;
  font-weight: 600;
  background: var(--gray-light);
}

.node-select-input option {
  font-size: 15px;
}

.key-node.isDown {
  background-color: var(--main-green-color);
  color: white;
  border-color: transparent;
}

/* .key-node::after {
  position: absolute;
  top: 3px;
  left: 3px;
  content: '';
  z-index: var(--node-feedback-z);
  width: calc(var(--send-node-w) - 6px);
  height: calc(var(--send-node-h) - 6px);
  transition: all 100ms ease-out;
  border: 0px solid white;
  border-radius: 5px;
  box-shadow: 0px 0px 0px 0px transparent;
} */

/* .key-node.isDown::after {
  border: 4px solid white;
  top: -1px;
  left: -1px;
  transition: all 0ms;
  box-shadow: 0px 0px 0px 2px var(--play-color);
} */
/* 240 : 480 for  aspect ratio */

/* fancy connection logic css */
.isConnecting .input-point { color: var(--illegal-color); }
.isConnecting .input-point::after {
  background-color: var(--illegal-color);
  border: 2px solid var(--illegal-color);
}

.isConnecting .input-point:hover:after {
  width: calc(var(--io-point-diameter));
  height: calc(var(--io-point-diameter));
  background-color: var(--illegal-color);
  border: 2px solid var(--illegal-color);
  top: calc(var(--io-height) - var(--io-point-diameter) + 1px);
  left: calc(calc(var(--io-point-diameter) * -0.5) + calc(var(--node-padding-horizontal) * -1));
  border: 2px solid var(--illegal-color);
  border-radius: calc(var(--io-point-diameter) * 0.5);
}

.isConnecting[data-connecting-value-type="number"] .input-point[data-value-type="number"] { color: black; }
.isConnecting[data-connecting-value-type="number"] .input-point[data-value-type="number"]::after{
  background-color: white;
  border: 2px solid black;
}
.isConnecting[data-connecting-value-type="number"] .input-point[data-value-type="number"]:hover:after{
  width: calc(var(--io-point-diameter) * 1.3);
  height: calc(var(--io-point-diameter) * 1.3);
  top: calc(var(--io-height) - var(--io-point-diameter) * 1.15 + 1px);
  left: calc(calc(var(--io-point-diameter) * -0.65) + calc(var(--node-padding-horizontal) * -1));
  border: 3px solid black;
  border-radius: calc(var(--io-point-diameter) * 0.65);
  cursor: pointer;
}

.isConnecting[data-connecting-value-type="feed"] .input-point[data-value-type="feed"] { color: black; }
.isConnecting[data-connecting-value-type="feed"] .input-point[data-value-type="feed"]::after{
  background-color: white;
  border: 2px solid black;
}
.isConnecting[data-connecting-value-type="feed"] .input-point[data-value-type="feed"]:hover:after{
  width: calc(var(--io-point-diameter) * 1.3);
  height: calc(var(--io-point-diameter) * 1.3);
  top: calc(var(--io-height) - var(--io-point-diameter) * 1.15 + 1px);
  left: calc(calc(var(--io-point-diameter) * -0.65) + calc(var(--node-padding-horizontal) * -1));
  border: 3px solid black;
  border-radius: calc(var(--io-point-diameter) * 0.65);
  cursor: pointer;
}

.isConnecting[data-connecting-value-type="bool"] .input-point[data-value-type="bool"] { color: black; }
.isConnecting[data-connecting-value-type="bool"] .dark-node .input-point[data-value-type="bool"] { color: white; }
.isConnecting[data-connecting-value-type="bool"] .input-point[data-value-type="bool"]::after{
  background-color: white;
  border: 2px solid black;
}
.isConnecting[data-connecting-value-type="bool"] .input-point[data-value-type="bool"]:hover:after{
  width: calc(var(--io-point-diameter) * 1.3);
  height: calc(var(--io-point-diameter) * 1.3);
  top: calc(var(--io-height) - var(--io-point-diameter) * 1.15 + 1px);
  left: calc(calc(var(--io-point-diameter) * -0.65) + calc(var(--node-padding-horizontal) * -1));
  border: 3px solid black;
  border-radius: calc(var(--io-point-diameter) * 0.65);
  cursor: pointer;
}